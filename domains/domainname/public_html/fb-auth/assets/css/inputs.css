.input-group-inline {
    display: flex;
    gap: 0.5rem;

    & > .input-group, .notice {
        height: fit-content;
        width: 50%;
    }

    & > .notice {
        height: 50px;
        border-radius: 5px;
        font-size: 14px;
        margin-bottom: 0;
    }
}

.input-group-hideable {
    overflow: hidden;
}

.input-group-check {
    user-select: none;
}

.input-group {
    margin-bottom: 0.5rem;
    position: relative;
    
    & > .input-body {
        width: 100%;
        height: 50px;
        border: 1px solid rgb(55, 55, 55);
        border-radius: 5px;
        min-width: 0px;
        outline: 2px solid transparent;
        transition: outline 0.3s ease, border-color 0.3s ease;
        background-color: var(--background-light) !important;
    }

    & > .input-body:has(input:focus-within) {
        outline: 2px solid grey;
    }

    & input, select {
        padding: 0.5rem;
        padding-top: 1.6rem;
        font-family: Karla;
        font-size: 16px;
        line-height: 20px;
        color: white !important;
        background-color: transparent !important;
        border: none;
        outline: none;
        width: 100%;
        height: 100%;
        opacity: 0;
        will-change: opacity;
        transition: opacity 0.3s ease;
        border-radius: 5px;
    }

    & select {
        padding: 0.3rem;
        padding-top: 1.4rem;
        /* color-scheme: dark; */
    }

    & option {
        /* color-scheme: dark; */
        color: black;
    }

    & label {
        z-index: 10;
        position: absolute;
        pointer-events: none;
        user-select: none;
        top: 17px;
        left: 0.5rem;
        width: 100%;
        height: 16px;
        color: rgb(176, 176, 176);
        font-size: 14px;
        will-change: unset;
        transition: transform 0.3s ease, color 0.3s ease;
        transform-origin: left;
        backface-visibility: hidden;
    }

    & label.focus, &:focus-within label {
        transform: translateY(-10px) translateZ(0);
    }

    & label.focus ~ select, label.focus ~ input, &:focus-within label ~ select, &:focus-within label ~ input{
        opacity: 1;
    }

    & .message-wrapper {
        pointer-events: none;
        width: 100%;
        height: 0px;
        opacity: 0;
        visibility: hidden;
        overflow: hidden;
    }
    
    & .error-message {
        padding-top: .2rem;
        padding-left: 1px;
        width: 100%;
        font-size: 12px;
        color: rgb(255, 97, 97);
    }
}

.input-group:has(input.invalid, select.invalid) {
    & > .input-body {
        border-color: rgb(255, 75, 75);
    }

    & > .input-body:focus-within {
        outline-color: rgba(255, 75, 75, 0.719);
    }

    & label {
        color: rgb(255, 97, 97);
    }
}

.input-group.input-group-half {
    width: calc(50% - 0.25rem);
}

/* AUTOFILL CSS FIX */
.input-group input:-webkit-autofill,
.input-group input:-webkit-autofill:hover,
.input-group input:-webkit-autofill:focus,
.input-group input:-webkit-autofill:active,
.input-group select:-webkit-autofill,
.input-group select:-webkit-autofill:hover,
.input-group select:-webkit-autofill:focus,
.input-group select:-webkit-autofill:active {
    -webkit-text-fill-color: white !important;
    -webkit-box-shadow: 0 0 0px 100000px var(--background-light) inset !important;
    caret-color: white !important; /* For cursor color */
    background-color: var(--background-light) !important;
}

.input-group input,
.input-group select {
    color-scheme: dark;
    background-color: var(--background-light) !important;
}

.input-group option {
    background-color: var(--background-light);
    color: white !important;
}
/* END AUTOFILL CSS FIX*/

/* PASSWORD INPUT ADDITIONAL CSS */

.password-input {
    width: 50%;
    margin-bottom: 1rem;

    & > .password-state {
        display: grid;
        gap: 0.5rem;
        grid-template-columns: auto auto;
        grid-template-rows: repeat(3, auto);
        grid-auto-flow: column;
        padding-left: 0.5rem;
    }

    & > .password-state > .matcher {
        display: flex;
        width: 100%;
        flex-direction: row;
        align-items: center;
        gap: 0.3rem;
        color: #727272;
        font-size: 15px;
        transition: color 0.3s ease;
    }

    & > .password-state > .matcher > .state {
        height: 15px;
        width: 15px;
        flex-shrink: 0;
        color: #5a5a5a;
        transition: color 0.3s ease;
    }

    & > .password-state > .matcher > .state > .valid {
        display: none;
    }

    & > .password-state > .matcher > .state > .invalid {
        display: block;
    }

    /* Helyes matcher stÃ­lus */
    & > .password-state > .matcher.valid {
        color: #8dc949;
    }

    & > .password-state > .matcher.valid > .state {
        color: #8dc949;
    }

    & > .password-state > .matcher.valid > .state > .valid {
        display: block;
    }

    & > .password-state > .matcher.valid > .state > .invalid {
        display: none;
    }
}